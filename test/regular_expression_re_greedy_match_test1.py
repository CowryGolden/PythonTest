#!/usr/bin/env python3
# -*- coding: utf-8 -*-
r'''
    # 正则表达式：re模块 贪婪匹配/非贪婪匹配 练习
    # 使用场景：
        最后需要特别指出的是，正则匹配默认是贪婪匹配，也就是匹配尽可能多的字符。举例如下，匹配出数字后面的0：

'''
# re模块的使用
import re

g = re.match(r'^(\d+)(0*)$', '102300').groups()

print('g =', g)   # 输出结果：g = ('102300', '') 
# 由于\d+采用贪婪匹配，直接把后面的0全部匹配了，结果0*只能匹配空字符串了。
# 必须让\d+采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个?就可以让\d+采用非贪婪匹配：
g1 = re.match(r'^(\d+?)(0*)$', '102300').groups()
print('g1 =', g1)   # 输出结果：g1 = ('1023', '00')

r'''
    #注：由于\d+采用贪婪匹配，直接把后面的0全部匹配了，结果0*只能匹配空字符串了。
        必须让\d+采用非贪婪匹配（也就是尽可能少匹配），才能把后面的0匹配出来，加个?就可以让\d+采用非贪婪匹配：

'''